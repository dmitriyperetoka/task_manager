name: taskmanager_workflow

on: 
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Lint with flake8
      run: flake8 --exclude=*migrations/* --per-file-ignores=settings.py:E501

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: dmitriyperetoka/taskmanager:latest
 
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: copy files
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        source: "docker-compose.yaml, nginx/default.conf"
        target: "~/taskmanager"
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          cd taskmanager
          echo DB_ENGINE=django.db.backends.postgresql > .env
          echo DB_NAME=postgres >> .env
          echo POSTGRES_USER=postgres >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=db >> .env
          echo DB_PORT=5432 >> .env
          echo SECRET_KEY="${{ secrets.SECRET_KEY }}" >> .env
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install docker-compose -y
          sudo docker-compose down
          sudo docker pull dmitriyperetoka/taskmanager:latest
          sudo docker-compose up -d
          sudo docker-compose exec -T web python manage.py collectstatic --no-input
          sudo docker-compose exec -T web python manage.py migrate
          sudo docker image prune -f

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
